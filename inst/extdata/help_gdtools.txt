================================================================================
breseq 0.38.1     http://barricklab.org/breseq

Active Developers: Barrick JE, Deatherage DE
Contact:           <jeffrey.e.barrick@gmail.com>

breseq is free software; you can redistribute it and/or modify it under the
terms the GNU General Public License as published by the Free Software 
Foundation; either version 2, or (at your option) any later version.

Copyright (c) 2008-2010 Michigan State University
Copyright (c) 2011-2022 The University of Texas at Austin

If you use breseq in your research, please cite:

  Deatherage, D.E., Barrick, J.E. (2014) Identification of mutations
  in laboratory-evolved microbes from next-generation sequencing
  data using breseq. Methods Mol. Biol. 1151: 165â€“188.

If you use structural variation (junction) predictions, please cite:

  Barrick, J.E., Colburn, G., Deatherage D.E., Traverse, C.C.,
  Strand, M.D., Borges, J.J., Knoester, D.B., Reba, A., Meyer, A.G. 
  (2014) Identifying structural variation in haploid microbial genomes 
  from short-read resequencing data using breseq. BMC Genomics 15:1039.
================================================================================

Usage: gdtools [COMMAND] [OPTIONS]

Manipulate Genome Diff (*.gd) files using the following commands.

General:
    VALIDATE               check formatting of input files
    APPLY                  apply mutations to a sequence
    ANNOTATE (or COMPARE)  annotate the effects of mutations and compare multiple samples
    MUTATIONS              (re)predict mutations from evidence
    CHECK                  compare control versus test mutations
    NORMALIZE              normalize mutation positions and annotations

Set and Filtering Operations:
    SUBTRACT               remove mutations in one file from another
    INTERSECT              keep shared mutations in two files
    UNION/MERGE            combine mutations, removing duplicates
    FILTER/REMOVE          remove mutations matching specified conditions
    MASK                   remove mutation predictions in masked regions
    NOT-EVIDENCE           remove evidence not used by any mutations

Format Conversions:
    GD2VCF                 GD to Variant Call Format (VCF)
    VCF2GD                 Variant Call Format(VCF) to GD
    GD2GVF                 GD to Genome Variation Format (GVF)
    GD2CIRCOS              GD to Circos Data
    MUMMER2MASK            Create a mask GD file from MUMmer output

Analysis:
    COUNT                  count statistics for different types of mutations
    PHYLOGENY              create maximum parsimony tree from mutations (requires PHYLIP)

TACC Utilities:
    DOWNLOAD               download reference and read files from GD header info
    RUNFILE                create a commands file and launcher script for use on TACC
